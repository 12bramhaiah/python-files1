class Solution(object):
    def romanToInt(self, s):
        """
        :type s: str
        :rtype: int
        """
        roman_map = {
            'I': 1, 'V': 5, 'X': 10, 'L': 50,
            'C': 100, 'D': 500, 'M': 1000
        }
        
        total = 0
        # Iterate through the Roman numeral string from left to right
        for i in range(len(s)):
            current_value = roman_map[s[i]]
            
            # Check for subtractive cases (e.g., IV, IX, XL, etc.)
            # If the current numeral's value is less than the next numeral's value,
            # it indicates a subtraction (e.g., IV = 5 - 1 = 4).
            if i + 1 < len(s) and current_value < roman_map[s[i+1]]:
                total -= current_value
            else:
                total += current_value
                
        return total
